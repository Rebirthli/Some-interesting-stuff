### **项目背景介绍**

**项目名称：** 智能古诗词搜索服务

**项目愿景：**
本项目旨在解决大型古诗词数据集（源自`chinese-poetry`开源仓库）无法被程序化、智能化检索的问题。目标是构建一个高性能、体验卓越的API服务，不仅能提供精准的关键词搜索，更能深入理解用户输入的抽象“物象”词语，实现基于意境和概念的语义搜索。

**核心挑战与解决方案：**
1.  **关键词搜索的局限性：** 传统的文本搜索无法理解“人流如织”与“车如流水马如龙”之间的内在联系。
2.  **用户输入的多样性：** 用户可能输入单个词、多个词、错别字，甚至是多个充满诗意的意象词语组合。

为应对这些挑战，我们设计了一套**双引擎搜索架构**：
*   **关键词检索引擎：** 基于PostgreSQL的全文检索（`PGroonga`）和模糊匹配（`pg_trgm`），提供了一个快速、容错的`/search`接口，用于处理字面匹配的查询。
*   **语义检索引擎：** 基于阿里云通义千问Embedding API和PostgreSQL的向量数据库扩展（`pgvector`），构建了一个强大的`/search/semantic`接口。该接口能将用户输入的**单个或多个物象词语**转换为向量，并通过计算向量空间的距离，找出意境最相近的诗句。

**技术栈选型：**
*   **后端框架：** FastAPI (Python) - 现代、高性能的API框架。
*   **数据库：** PostgreSQL - 并启用`PGroonga`, `pg_trgm`, `pgvector`三大核心扩展。
*   **向量生成：** 阿里云通义千问Embedding API - 提供强大的文本向量化能力，使服务本身保持轻量。
*   **开发与部署：** Docker & Docker Compose - 确保开发环境与生产环境的高度一致性，简化部署流程。

**最终产出：**
一个稳定、可靠、可部署的API服务。它提供两个核心端点，分别满足用户对速度和深度的不同搜索需求，为古诗词的探索和发现提供了全新的智能化途径。